{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst items = localStorage.getItem(\"cartItems\") !== null ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst totalAmount = localStorage.getItem(\"totalAmount\") !== null ? JSON.parse(localStorage.getItem(\"totalAmount\")) : 0;\nconst totalQuantity = localStorage.getItem(\"totalQuantity\") !== null ? JSON.parse(localStorage.getItem(\"totalQuantity\")) : 0;\nconst setItemFunc = (item, totalAmount, totalQuantity) => {\n  localStorage.setItem(\"cartItems\", JSON.stringify(item));\n  localStorage.setItem(\"totalAmount\", JSON.stringify(totalAmount));\n  localStorage.setItem(\"totalQuantity\", JSON.stringify(totalQuantity));\n};\nconst initialState = {\n  cartItems: items,\n  totalQuantity: totalQuantity,\n  totalAmount: totalAmount\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    // =========== add item ============\n    addItem(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.cartItems.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        // ===== note: if you use just redux you should not mute state array instead of clone the state array, but if you use redux toolkit that will not a problem because redux toolkit clone the array behind the scene\n\n        state.cartItems.push({\n          id: newItem.id,\n          title: newItem.title,\n          image01: newItem.image01,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = Number(existingItem.totalPrice) + Number(newItem.price);\n      }\n      state.totalAmount = state.cartItems.reduce((total, item) => total + Number(item.price) * Number(item.quantity), 0);\n      setItemFunc(state.cartItems.map(item => item), state.totalAmount, state.totalQuantity);\n    },\n    // ========= remove item ========\n\n    removeItem(state, action) {\n      const id = action.payload;\n      const existingItem = state.cartItems.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.cartItems = state.cartItems.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = Number(existingItem.totalPrice) - Number(existingItem.price);\n      }\n      state.totalAmount = state.cartItems.reduce((total, item) => total + Number(item.price) * Number(item.quantity), 0);\n      setItemFunc(state.cartItems.map(item => item), state.totalAmount, state.totalQuantity);\n    },\n    //============ delete item ===========\n\n    deleteItem(state, action) {\n      const id = action.payload;\n      const existingItem = state.cartItems.find(item => item.id === id);\n      if (existingItem) {\n        state.cartItems = state.cartItems.filter(item => item.id !== id);\n        state.totalQuantity = state.totalQuantity - existingItem.quantity;\n      }\n      state.totalAmount = state.cartItems.reduce((total, item) => total + Number(item.price) * Number(item.quantity), 0);\n      setItemFunc(state.cartItems.map(item => item), state.totalAmount, state.totalQuantity);\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","items","localStorage","getItem","JSON","parse","totalAmount","totalQuantity","setItemFunc","item","setItem","stringify","initialState","cartItems","cartSlice","name","reducers","addItem","state","action","newItem","payload","existingItem","find","id","push","title","image01","price","quantity","totalPrice","Number","reduce","total","map","removeItem","filter","deleteItem","cartActions","actions"],"sources":["C:/Users/Юля/Desktop/shop/src/store/shopping/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst items =\r\n    localStorage.getItem(\"cartItems\") !== null\r\n        ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n        : [];\r\n\r\nconst totalAmount =\r\n    localStorage.getItem(\"totalAmount\") !== null\r\n        ? JSON.parse(localStorage.getItem(\"totalAmount\"))\r\n        : 0;\r\n\r\nconst totalQuantity =\r\n    localStorage.getItem(\"totalQuantity\") !== null\r\n        ? JSON.parse(localStorage.getItem(\"totalQuantity\"))\r\n        : 0;\r\n\r\nconst setItemFunc = (item, totalAmount, totalQuantity) => {\r\n    localStorage.setItem(\"cartItems\", JSON.stringify(item));\r\n    localStorage.setItem(\"totalAmount\", JSON.stringify(totalAmount));\r\n    localStorage.setItem(\"totalQuantity\", JSON.stringify(totalQuantity));\r\n};\r\n\r\nconst initialState = {\r\n    cartItems: items,\r\n    totalQuantity: totalQuantity,\r\n    totalAmount: totalAmount,\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n    name: \"cart\",\r\n    initialState,\r\n\r\n    reducers: {\r\n        // =========== add item ============\r\n        addItem(state, action) {\r\n            const newItem = action.payload;\r\n            const existingItem = state.cartItems.find(\r\n                (item) => item.id === newItem.id\r\n            );\r\n            state.totalQuantity++;\r\n\r\n            if (!existingItem) {\r\n                // ===== note: if you use just redux you should not mute state array instead of clone the state array, but if you use redux toolkit that will not a problem because redux toolkit clone the array behind the scene\r\n\r\n                state.cartItems.push({\r\n                    id: newItem.id,\r\n                    title: newItem.title,\r\n                    image01: newItem.image01,\r\n                    price: newItem.price,\r\n                    quantity: 1,\r\n                    totalPrice: newItem.price,\r\n                });\r\n            } else {\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice =\r\n                    Number(existingItem.totalPrice) + Number(newItem.price);\r\n            }\r\n\r\n            state.totalAmount = state.cartItems.reduce(\r\n                (total, item) => total + Number(item.price) * Number(item.quantity),\r\n\r\n                0\r\n            );\r\n\r\n            setItemFunc(\r\n                state.cartItems.map((item) => item),\r\n                state.totalAmount,\r\n                state.totalQuantity\r\n            );\r\n        },\r\n\r\n        // ========= remove item ========\r\n\r\n        removeItem(state, action) {\r\n            const id = action.payload;\r\n            const existingItem = state.cartItems.find((item) => item.id === id);\r\n            state.totalQuantity--;\r\n\r\n            if (existingItem.quantity === 1) {\r\n                state.cartItems = state.cartItems.filter((item) => item.id !== id);\r\n            } else {\r\n                existingItem.quantity--;\r\n                existingItem.totalPrice =\r\n                    Number(existingItem.totalPrice) - Number(existingItem.price);\r\n            }\r\n\r\n            state.totalAmount = state.cartItems.reduce(\r\n                (total, item) => total + Number(item.price) * Number(item.quantity),\r\n                0\r\n            );\r\n\r\n            setItemFunc(\r\n                state.cartItems.map((item) => item),\r\n                state.totalAmount,\r\n                state.totalQuantity\r\n            );\r\n        },\r\n\r\n        //============ delete item ===========\r\n\r\n        deleteItem(state, action) {\r\n            const id = action.payload;\r\n            const existingItem = state.cartItems.find((item) => item.id === id);\r\n\r\n            if (existingItem) {\r\n                state.cartItems = state.cartItems.filter((item) => item.id !== id);\r\n                state.totalQuantity = state.totalQuantity - existingItem.quantity;\r\n            }\r\n\r\n            state.totalAmount = state.cartItems.reduce(\r\n                (total, item) => total + Number(item.price) * Number(item.quantity),\r\n                0\r\n            );\r\n            setItemFunc(\r\n                state.cartItems.map((item) => item),\r\n                state.totalAmount,\r\n                state.totalQuantity\r\n            );\r\n        },\r\n    },\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}