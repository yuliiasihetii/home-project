{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst items = localStorage.getItem('cartItems') !== null ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst totalAmount = localStorage.getItem('totalAmount') !== null ? JSON.parse(localStorage.getItem('totalAmount')) : 0;\nconst totalQuantity = localStorage.getItem('totalQuantity') !== null ? JSON.parse(localStorage.getItem('totalQuantity')) : 0;\nconst initialState = {\n  cartItems: items,\n  totalQuantity: totalQuantity,\n  totalAmount: totalAmount\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: initialState,\n  reducers: {\n    addItem(state, action) {\n      const newItem = action.payload;\n      const existItem = state.cartItems.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existItem) {\n        state.cartItems.push({\n          id: newItem.id,\n          title: newItem.title,\n          image01: newItem.image01,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price\n        });\n      } else {\n        existItem.quantity++;\n        existItem.totalPrice = Number(existItem.totalPrice) + Number(newItem.price);\n      }\n      state.totalAmount = state.cartItems.reduce((total, item) => total + Number(item.price) * Number(item.quantity), 0);\n      localStorage.setItem('cartItems', JSON.stringify(state.cartItems.map(item => item)));\n      localStorage.setItem('totalAmount', JSON.stringify(state.totalAmount));\n      localStorage.setItem('totalQuantity', JSON.stringify(state.totalQuantity));\n    },\n    removeItem(state, action) {\n      const id = action.payload;\n      const existItem = state.cartItems.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existItem.quantity === 1) {\n        state.cartItems = state.cartItems.filter(item => item.id !== id);\n      } else {\n        existItem.quantity--;\n        existItem.totalPrice = Number(existItem.totalPrice) - Number(existItem.price);\n      }\n      state.totalAmount = state.cartItems.reduce((total, item) => total + Number(item.price) * Number(item.quantity), 0);\n    },\n    deleteItem(state, action) {\n      const id = action.payload;\n      const existItem = state.cartItems.find(item => item.id === id);\n      if (existItem) {\n        state.cartItems = state.cartItems.filter(item => item.id !== id);\n        state.totalQuantity = state.totalQuantity - existItem.quantity;\n      }\n      state.totalAmount = state.cartItems.reduce((total, item) => total + Number(item.price) * Number(item.quantity), 0);\n    }\n  }\n});\nexport const cartAction = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","items","localStorage","getItem","JSON","parse","totalAmount","totalQuantity","initialState","cartItems","cartSlice","name","reducers","addItem","state","action","newItem","payload","existItem","find","item","id","push","title","image01","price","quantity","totalPrice","Number","reduce","total","setItem","stringify","map","removeItem","filter","deleteItem","cartAction","actions"],"sources":["C:/Users/Юля/Desktop/shop/src/store/shopping/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst items = localStorage.getItem('cartItems') !== null ? JSON.parse(localStorage.getItem('cartItems')) : []\r\nconst totalAmount = localStorage.getItem('totalAmount') !== null ? JSON.parse(localStorage.getItem('totalAmount')) : 0\r\nconst totalQuantity = localStorage.getItem('totalQuantity') !== null ? JSON.parse(localStorage.getItem('totalQuantity')) : 0\r\n\r\nconst initialState = {\r\n    cartItems: items,\r\n    totalQuantity: totalQuantity,\r\n    totalAmount: totalAmount,\r\n}\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: initialState,\r\n\r\n    reducers: {\r\n        addItem(state, action) {\r\n            const newItem = action.payload\r\n            const existItem = state.cartItems.find((item) => item.id === newItem.id)\r\n            state.totalQuantity++\r\n\r\n            if (!existItem) {\r\n                state.cartItems.push({\r\n                    id: newItem.id,\r\n                    title: newItem.title,\r\n                    image01: newItem.image01,\r\n                    price: newItem.price,\r\n                    quantity: 1,\r\n                    totalPrice: newItem.price\r\n                })\r\n            }\r\n            else {\r\n                existItem.quantity++\r\n                existItem.totalPrice = Number(existItem.totalPrice) + Number(newItem.price)\r\n            }\r\n\r\n            state.totalAmount = state.cartItems.reduce((total, item) =>\r\n                total + Number(item.price) * Number(item.quantity), 0\r\n            )\r\n            localStorage.setItem('cartItems', JSON.stringify(state.cartItems.map(item => item)))\r\n            localStorage.setItem('totalAmount', JSON.stringify(state.totalAmount))\r\n            localStorage.setItem('totalQuantity', JSON.stringify(state.totalQuantity))\r\n        },\r\n\r\n        removeItem(state, action) {\r\n            const id = action.payload\r\n            const existItem = state.cartItems.find((item) => item.id === id)\r\n            state.totalQuantity--\r\n\r\n            if (existItem.quantity === 1) {\r\n                state.cartItems = state.cartItems.filter((item) => item.id !== id)\r\n            }\r\n            else {\r\n                existItem.quantity--\r\n                existItem.totalPrice = Number(existItem.totalPrice) - Number(existItem.price)\r\n            }\r\n\r\n            state.totalAmount = state.cartItems.reduce((total, item) =>\r\n                (total + Number(item.price) * Number(item.quantity)), 0\r\n            )\r\n        },\r\n\r\n        deleteItem(state, action) {\r\n            const id = action.payload\r\n            const existItem = state.cartItems.find((item) => item.id === id)\r\n\r\n            if (existItem) {\r\n                state.cartItems = state.cartItems.filter(item => item.id !== id)\r\n                state.totalQuantity = state.totalQuantity - existItem.quantity\r\n            }\r\n            state.totalAmount = state.cartItems.reduce((total, item) =>\r\n                (total + Number(item.price) * Number(item.quantity)), 0\r\n            )\r\n        }\r\n    }\r\n})\r\n\r\nexport const cartAction = cartSlice.actions\r\nexport default cartSlice"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}