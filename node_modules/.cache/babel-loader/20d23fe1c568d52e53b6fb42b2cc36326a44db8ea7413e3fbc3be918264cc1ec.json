{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  cartItems: [],\n  totalQuantity: 0,\n  totalAmount: 0\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: initialState,\n  reducers: {\n    addItem(state, action) {\n      const newItem = action.payload;\n      const existItem = state.cartItems.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existItem) {\n        state.cartItems.push({\n          id: newItem.id,\n          title: newItem.title,\n          image01: newItem.image01,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price\n        });\n      } else {\n        existItem.quantity++;\n        existItem.totalPrice = Number(existItem.totalPrice) + Number(newItem.price);\n      }\n      state.totalAmount = state.cartItems.reduce((total, item) => total + Number(item.price) * Number(item.quantity));\n    },\n    removeItem(state, action) {\n      const id = action.payload;\n      const existItem = state.cartItems.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existItem === 1) {\n        state.cartItems = state.cartItems.filter(item => item.id !== id);\n      } else {\n        existItem.quantity--;\n        existItem.totalPrice = Number(existItem.totalPrice) - Number(existItem.price);\n      }\n      state.totalAmount = state.cartItems.reduce((total, item) => total + Number(item.price) * Number(item.quantity));\n    }\n  }\n});\nexport const cartAction = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","initialState","cartItems","totalQuantity","totalAmount","cartSlice","name","reducers","addItem","state","action","newItem","payload","existItem","find","item","id","push","title","image01","price","quantity","totalPrice","Number","reduce","total","removeItem","filter","cartAction","actions"],"sources":["C:/Users/Юля/Desktop/shop/src/store/shopping/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    cartItems: [],\r\n    totalQuantity: 0,\r\n    totalAmount: 0,\r\n}\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: initialState,\r\n\r\n    reducers: {\r\n        addItem(state, action) {\r\n            const newItem = action.payload\r\n            const existItem = state.cartItems.find((item) => item.id === newItem.id)\r\n            state.totalQuantity++\r\n\r\n            if (!existItem) {\r\n                state.cartItems.push({\r\n                    id: newItem.id,\r\n                    title: newItem.title,\r\n                    image01: newItem.image01,\r\n                    price: newItem.price,\r\n                    quantity: 1,\r\n                    totalPrice: newItem.price\r\n                })\r\n            }\r\n            else {\r\n                existItem.quantity++\r\n                existItem.totalPrice = Number(existItem.totalPrice) + Number(newItem.price)\r\n            }\r\n\r\n            state.totalAmount = state.cartItems.reduce((total, item) =>\r\n                total + Number(item.price) * Number(item.quantity)\r\n            )\r\n        },\r\n\r\n        removeItem(state, action) {\r\n            const id = action.payload\r\n            const existItem = state.cartItems.find((item) => item.id === id)\r\n            state.totalQuantity--\r\n\r\n            if (existItem === 1) {\r\n                state.cartItems = state.cartItems.filter(item => item.id !== id)\r\n            }\r\n            else {\r\n                existItem.quantity--\r\n                existItem.totalPrice = Number(existItem.totalPrice) - Number(existItem.price)\r\n            }\r\n\r\n            state.totalAmount = state.cartItems.reduce((total, item) => (\r\n                total + Number(item.price) * Number(item.quantity)\r\n            ))\r\n        }\r\n    }\r\n})\r\n\r\nexport const cartAction = cartSlice.actions\r\nexport default cartSlice"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,SAAS,EAAE,EAAE;EACbC,aAAa,EAAE,CAAC;EAChBC,WAAW,EAAE;AACjB,CAAC;AAED,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC1BM,IAAI,EAAE,MAAM;EACZL,YAAY,EAAEA,YAAY;EAE1BM,QAAQ,EAAE;IACNC,OAAO,CAACC,KAAK,EAAEC,MAAM,EAAE;MACnB,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,SAAS,GAAGJ,KAAK,CAACP,SAAS,CAACY,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACxEP,KAAK,CAACN,aAAa,EAAE;MAErB,IAAI,CAACU,SAAS,EAAE;QACZJ,KAAK,CAACP,SAAS,CAACe,IAAI,CAAC;UACjBD,EAAE,EAAEL,OAAO,CAACK,EAAE;UACdE,KAAK,EAAEP,OAAO,CAACO,KAAK;UACpBC,OAAO,EAAER,OAAO,CAACQ,OAAO;UACxBC,KAAK,EAAET,OAAO,CAACS,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAEX,OAAO,CAACS;QACxB,CAAC,CAAC;MACN,CAAC,MACI;QACDP,SAAS,CAACQ,QAAQ,EAAE;QACpBR,SAAS,CAACS,UAAU,GAAGC,MAAM,CAACV,SAAS,CAACS,UAAU,CAAC,GAAGC,MAAM,CAACZ,OAAO,CAACS,KAAK,CAAC;MAC/E;MAEAX,KAAK,CAACL,WAAW,GAAGK,KAAK,CAACP,SAAS,CAACsB,MAAM,CAAC,CAACC,KAAK,EAAEV,IAAI,KACnDU,KAAK,GAAGF,MAAM,CAACR,IAAI,CAACK,KAAK,CAAC,GAAGG,MAAM,CAACR,IAAI,CAACM,QAAQ,CAAC,CACrD;IACL,CAAC;IAEDK,UAAU,CAACjB,KAAK,EAAEC,MAAM,EAAE;MACtB,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAO;MACzB,MAAMC,SAAS,GAAGJ,KAAK,CAACP,SAAS,CAACY,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAChEP,KAAK,CAACN,aAAa,EAAE;MAErB,IAAIU,SAAS,KAAK,CAAC,EAAE;QACjBJ,KAAK,CAACP,SAAS,GAAGO,KAAK,CAACP,SAAS,CAACyB,MAAM,CAACZ,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MACpE,CAAC,MACI;QACDH,SAAS,CAACQ,QAAQ,EAAE;QACpBR,SAAS,CAACS,UAAU,GAAGC,MAAM,CAACV,SAAS,CAACS,UAAU,CAAC,GAAGC,MAAM,CAACV,SAAS,CAACO,KAAK,CAAC;MACjF;MAEAX,KAAK,CAACL,WAAW,GAAGK,KAAK,CAACP,SAAS,CAACsB,MAAM,CAAC,CAACC,KAAK,EAAEV,IAAI,KACnDU,KAAK,GAAGF,MAAM,CAACR,IAAI,CAACK,KAAK,CAAC,GAAGG,MAAM,CAACR,IAAI,CAACM,QAAQ,CACpD,CAAC;IACN;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMO,UAAU,GAAGvB,SAAS,CAACwB,OAAO;AAC3C,eAAexB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}